[options]
size 1000
tags COVERED UNCOVERED NOCHANGE PROBE FMGAP VERI UVM

[setup]
bash ../common/setup_dsim.sh

[script]
script read_sources.ys
prep -top cv32e40p_alu_div
pmuxtree

[files]
../../../../core-v-cores/cv32e40p/rtl/cv32e40p_alu_div.sv

[logic]
if result("test_sim") == "FAIL":
  tag("COVERED")
  tag("VERI")
  if rng(100) < 20:
    tag("PROBE")
    if result("test_eq") == "PASS":
      tag("FMGAP")
  return

if result("test_eq") == "PASS":
  tag("NOCHANGE")
  if rng(100) < 20:
    tag("PROBE")
    if result("test_dsim") == "FAIL":
      tag("FMGAP")
  return

if result("test_dsim") == "FAIL":
  tag("COVERED")
  tag("UVM")
  return

tag("UNCOVERED")

[report]
if tags("FMGAP"):
    print("Found %d mutations exposing a formal gap!" % tags("FMGAP"))
if tags("COVERED")+tags("UNCOVERED"):
    print("Coverage: %.2f%%" % (100.0*tags("COVERED")/(tags("COVERED")+tags("UNCOVERED"))))

[test test_sim]
maxbatchsize 10
expect PASS FAIL
run bash $PRJDIR/test_sim.sh

[test test_dsim]
expect PASS FAIL
run bash $PRJDIR/test_dsim.sh

[test test_eq]
expect PASS FAIL
run bash $PRJDIR/test_eq.sh
